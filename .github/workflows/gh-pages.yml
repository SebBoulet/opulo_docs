name: publish site

on:
  workflow_dispatch:
  push:
    branches:
      - main  # Set a branch to deploy

env:
  main_branch: main
  base_url: 'https://docs.opulo.io/'
  ignore_tags: |
    mobo-rev02
    feeder-rev03
    feeder-rev04
    feeder-rev05
    v1.1.0
    v1.2.0
    v1.2.1
    v1.2.2
    v1.3.0
    v1.3.1
    v1.3.2
    v1.4.0
    ds_test_1
    ds_test_2
    
jobs:
  output_details:
    name: output Details
    runs-on: ubuntu-20.04
    steps:
      - name: Output Ref Type
        shell: bash
        run: |
          echo "event name = ${{github.event_name}}"
          echo "tag = ${GITHUB_REF##refs/tags/}"
    
  check_spelling:
    name: Check Spelling & Language Use
    runs-on: ubuntu-20.04
    needs: output_details
    if: github.event_name == 'push' || github.event_name == 'release' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: false

      - name: Check Site Spelling
        uses: rojopolis/spellcheck-github-actions@0.21.1
        with:
          config_path: doc/.spellcheck.yml # put path to configuration file here
          source_files: doc/content/en/**/*.md
          task_name: Markdown

      - name: Check for offensive language in the website
        uses: get-woke/woke-action@v0
        with:
          fail-on-error: false
          workdir: doc/content/en

            #  generate-3d-prints:
            #    name: Generate G-Code files and info for documentation
            #    runs-on: ubuntu-20.04
            #    needs: check_spelling
            #    steps:
            #    - name: Update system repositories
            #      run:  sudo apt update
            #
            #    - name: Install missing modules
            #      run:  sudo apt install python3 libcanberra-gtk-module libcanberra-gtk3-module libglu1-mesa libgl1 libpangox-1.0-0 libpangoxft-1.0-0
            #
            #    - name: Download repository
            #      uses: actions/checkout@v2
            #
            #    - name: Fetch FreeCAD
            #      uses: dsaltares/fetch-gh-release-asset@master
            #      with:
            #        repo: "FreeCAD/FreeCAD"
            #        version: "tags/0.19.2"
            #        file: "FreeCAD_0.19-24291-Linux-Conda_glibc2.12-x86_64.AppImage"
            #        target: "FreeCAD.AppImage"
            #        token: ${{ secrets.GITHUB_TOKEN }}
            #
            #    - name: Download PrusaSlicer
            #      run: |
            #           wget --content-disposition --quiet https://github.com/prusa3d/PrusaSlicer/releases/download/version_2.3.1/PrusaSlicer-2.3.1+linux-x64-202104161339.AppImage
            #           mv PrusaSlicer-* PrusaSlicer.AppImage
            #
            #    - name: Install PrusaSlicer 2
            #      run: export SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
            #
            #    - name: Install PrusaSlicer 3
            #      run: chmod a+x PrusaSlicer.AppImage 
            #
            #    - name: Remove existing 3D Print Reference Directory
            #      run: |
            #           rm -dfr doc/content/en/docs/reference/3dprint
            #           mkdir -p doc/content/en/docs/reference/3dprint
            #
            #    - name: Generate 3D files
            #      run:  |
            #        sudo chown runner:docker FreeCAD.AppImage
            #        chmod +x FreeCAD.AppImage
            #        ./FreeCAD.AppImage --appimage-extract > /dev/null
            #        cd pnp/cad
            #        rm -rf 3D-Prints
            #        mkdir 3D-Prints
            #        python3 export-3d-files.py
            #        
            #    - name: Slice 3D files
            #      run: |
            #        cd pnp/cad
            #        python slice-3d-files.py
            #
            #    - name: Upload the 3D print info as an aritfact
            #      uses: actions/upload-artifact@v2
            #      with:
            #        name: 3d-prints
            #        path: ./doc/content/en/docs/reference/3dprint/

  deploy:
    name: Deploy
    needs: check_spelling
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive  # Fetch the Docsy theme
          fetch-depth: 0         # Fetch all history for .GitInfo and .Lastmod
          lfs: true
          
            #      - name: Download 3d Print Details
            #        uses: actions/download-artifact@v2
            #        with:
            #          name: 3d-prints
            #          path: ./doc/content/en/docs/reference/3dprint/

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.79.1'
          extended: true

      - name: Setup Node
        uses: actions/setup-node@v3.1.1
        with:
          node-version: '12.x'

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install necessary dependencies from NPM
        run: npm ci
        working-directory: doc
        
      - name: Clean the working directory
        shell: bash
        run: rm -rf doc/public

      - name: Append Tag Details To config.toml
        run: ./scripts/create-tag.py ${{ env.base_url }}
        working-directory: doc       

      - name: Set Version For Main Branch & Generate The Site
        run: |
          rm -rf ./doc/public/
          sed -i "s/version = \"0.0\"/version = \"main\"/" doc/config.toml
          sed -i "s/# github_branch= \"main\"/github_branch= \"${{ env.main_branch }}\"/" doc/config.toml          
          hugo -s doc --gc --minify --baseURL ${{env.base_url}}

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}            
          publish_dir: .
          allow_empty_commit: true
          cname: docs.opulo.io

